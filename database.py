import sqlite3
from typing import Optional, Dict, List
import json

def init_db():
    """データベースの初期化とテーブルの作成"""
    conn = sqlite3.connect('tourist_spots.db')
    c = conn.cursor()
    
    # 観光地テーブルの作成
    c.execute('''
        CREATE TABLE IF NOT EXISTS tourist_spots (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            area_name TEXT NOT NULL UNIQUE,
            description TEXT NOT NULL
        )
    ''')
    
    # 初期データの挿入
    tourist_data = {
        "渋谷": "若者文化の中心地。スクランブル交差点やハチ公像、渋谷109でショッピングが楽しめます。",
        "新宿": "高層ビルと歓楽街が共存。新宿御苑での自然散策や歌舞伎町のナイトライフが魅力です。",
        "浅草": "伝統的な下町観光地。浅草寺や仲見世通りを訪れ、スカイツリーを背景に江戸の雰囲気を堪能。",
        "秋葉原": "電気街とオタク文化。最新の電気製品やアニメ、メイドカフェを探索できる特のエリア。",
        "上野": "文化施設が集中するエリア。上野公園や美術館、動物園で一日中楽しめます。",
        "銀座": "高級ショッピング街。老舗百貨店やブランドショップ、洗練されたレストランが立ち並びます。",
        "池袋": "商業とエンタメの融合地。サンシャインシティや水族館、プラネタリウムで充実の時間を。",
        "原宿": "若者とポップカルチャーの発信地。竹下通りや明治神宮、ラフォーレ原宿で流行を体感。",
        "お台場": "未来的な人工島。フジテレビやヴィーナスフォート、大観覧車で楽しむアミューズメント。",
        "六本木": "夜のエンタメとアートの拠点。六本木ヒルズや森美術館、ナイトライフが充実。",
        "品川": "交通の要所。アクアパーク品川や歴史的建物、豊富なショッピング施設が魅力。",
        "築地": "食の宝庫。築地市場で新鮮な海鮮を楽しみ、寿司店で本格的な食事を堪能。",
        "恵比寿": "おしゃれなカフェとレストランが多い。恵比寿ガーデンプレイスでのんびり過ごせます。",
        "目黒": "落ち着いた雰囲気のエリア。目黒川の桜並木黒園、アートギャラリーが魅力。",
        "吉祥寺": "自然と文化が融合するエリア。井の頭公園や吉祥寺パルコでのんびりとした時間を。",       
        "代官山": "高級ブティックとカフェが並ぶ。代官山T-SITEでトレンドや新しい文化に触れられます。",
        "中目黒": "おしゃれなエリア。目黒川沿いの桜並木やカフェ、ブティックで歩きながら楽しめる。",
        "神田": "古書店街と歴史ある街並み。神田明神を訪れ、日本の伝統文化に触れることができます。",
        "日本橋": "歴史と近代が交錯。日本橋三越やコレド室町、伝統的な橋を巡る観光が楽しめます。",                   
        "丸の内": "ビジネス街と観光スポットが混在するエリア。東京駅や丸ビル、皇居が近くにあります。",
        "大久保": "多文化の融合地。韓国料理店やアジア系ショップが多く、異国の雰囲気を楽しめます。",
        "赤坂": "ビジネスと高級レストランのエリア。赤坂サカスやホテルニューオータニで贅沢な時間を。",
        "東銀座": "歌舞伎座が位置する文化の中心地。伝統芸能と高級飲食店が並び、文化体験が可能。",
        "北千住": "���町情緒が残るエリア。商店街や地元の食事処で地域の雰囲気を楽しむことができます。",
        "板橋": "歴史ある名所と現代的スポット。板橋区立美術館や板橋宿で文化的な観光が楽しめます。",
        "青山": "高級ブティックとアートが共存。青山墓地や国連大学、洗練された雰囲気が魅力です。",
        "麻布": "歴史と国際色が豊か。麻布十番商店街や外国人向けの施設が多く、国際的な雰囲気が漂います。",
        "田町": "ビジネスと大学が集まる地域。慶應義塾大学や芝浦工業大学が近く、知的な雰囲気です。",
        "西麻布": "高級レストランとバーが集うエリア。夜のエンタメスポットとして人気があります。",
        "高田馬場": "学生街とラーメン店が多い。早稲田大学があり、ラーメン激戦区としても有名です。",
        "中野": "サブカルチャーと商店街が魅力。中野ブロードウェイやアニメショップで買い物を楽しめます。",
        "目白": "緑豊かな住宅街。学習院大学や目白庭園があり、静かで落ち着いた観光地です。",
        "大町": "交通の要所で商施設が充実。アトレ大井町やしながわ水族館でのんびり過ごせます。",
        "大森": "歴史と自然が融合するエリア。大森貝塚遺跡庭園やしながわ区民公園でリラックス。",
        "蒲田": "大田区の商業中心地。温泉施設があり、羽田空港へのアクセスも便利です。",
        "五反田": "商業と住宅のバランスが取れた地域。TOCビルや五反田TOCでショッピングを楽しめます。",
        "三軒茶屋": "カフェと音楽が楽しめるエリア。三軒屋キャロットタワーがランドマークです。",
        "駒沢": "スポーツと自然が楽しめるエリア。駒沢オリンピック公園でのランニングが人気。",
        "駒沢": "スポーツと自然が楽しめるエリア。駒沢オリンピック公園でのランニングが人気。",
       "亀戸": "下町情緒と商店街が魅力。亀戸天神社や地元グルメを楽しむことができます。",
        "門前仲町": "江戸の風情が残るエリア。深川不動堂や富岡八幡宮が見どころです。",
        "葛西": "ディズニーリゾートへの玄関口。葛西臨海公園や水族館でのんびり過ごせます。",
        "豊洲": "再開発で注目エリア。豊洲市場やららぽーと豊洲でショッピングや食事を楽しめます。",
        "木場": "歴史と新しい文化が交差するエリア。木場公園や深川ギャザリアが観光の見どころ。",
        "大崎": "ビジネスと自然が融合するエリア。ゲートシティ大崎やしながわ区民公園が近くにあります。",
        "武蔵小山": "商店街と温泉が楽しめるエリア。武蔵小山温泉やパルム商店街が人気スポットです。",
        "自由が丘": "カフェと雑貨店が集うエリア。自由が丘スイーツフォレストでスイーツを堪能。",
        "二子玉川": "自然と都市が調和するエリア。二子玉川ライズや玉川高島屋でショッピング。",
        "成城": "高級住宅街と自然が魅力。成城学園前や砧公園で静かな観光を楽しめます。",
        "町田": "東京と神奈川の境界に位置するエリア。町田リス園や町田モディが家族連れに人気。",
        "南青山": "ファッションとアートのトレンドエリア。高級ブランドやギャラリーが多く集まります。",
        "西荻窪": "アンティークショップとカフェが富。西荻窪駅辺でレトロな雰囲気を楽しめます。",
        "千駄ヶ谷": "スポーツ施設が充実したエリア。国立競技場や東京体育館があり、活気あ���街並み。",
        "四谷": "歴史と文化が交差するエリア。四谷見附橋や迎賓館赤坂離宮が見どころです。",   
        "神楽坂": "石畳の路地とフレンチレストランが魅力。異国情緒漂う雰囲気が人気です。",
        "高輪": "歴史ある寺院とホテルが並ぶエリア。泉岳寺や高輪プリンスホテルで優雅な時間を。",     
        "新橋": "サラリーマンの街として有名。飲食店が多く、夜の賑わいを楽しめます。",
        "汐留": "ビジネスと観光が融合するエリア。汐留シティセンターや日本テレビタワーが見どころ。",
        "青梅": "自然と歴史が共存するエリア。青梅鉄道公園や御岳山で自然を満喫できます。",
        "武蔵野": "緑と文化が調和したエリア。武蔵野公園や吉祥寺での散策が楽しめます。",
        "町屋": "下町情緒と商店街が魅力のエリア。都電荒川線でのんびりとした旅を楽しむ。",
        "江古田": "大学と店街が共存する活気あるエリア。日本大学芸術学部があり、学生で賑わう。",
        "高輪台": "閑静な住宅街と級ホテルが立ち並ぶエリア。静かな環境でリラックスできる。",
        "新大久保": "多国籍料理と韓流文化が楽しめるエリア。韓国料理店やK-POPショップが賑わう。",
        "北沢": "演劇と音楽の文化が根付くエリア。下北沢で劇場やライブハウスを楽しむことができます。",
        "千住": "歴史と文化が交差するエリア。千住大橋や千住博物館で歴史を学ぶことができます。",
        "深川": "江戸の風情が残るエリア。深川江戸資料館や深川不動堂など、文化的な観光地が多い。",
        "神田": "古書店街とビジネス街が融合するエリア。神田明神や神保町の古書店巡りが楽しめます。",
        "赤羽": "多彩な飲食店と商業施設が集まるエリア。赤羽駅周辺で地元の味を堪能。",

        "駒込": "庭園と歴史が魅力のエリア。六義園や駒込駅周辺で自然と文化を楽しむことができます。",
        "浜松町": "ビジネスと観光の拠点。東京タワーや増上寺が近く、観光に最適なエアです。",
        "下北沢": "若者文化の発信地。個性的な古着屋やライブハウス、小劇場が集まり、アートと音楽の街として知られています。",
        "神宮前": "原宿の中心部に位置する若者文化の発信地。明治神宮、表参道、竹下通りなどの観光スポットがあり、ファッション、カフェ、アート文化が融合するエリア。キャットストリートやラフォーレ原宿など、最新トレンドを体感できます。",
    }
    
    for area_name, description in tourist_data.items():
        c.execute('''
            INSERT OR REPLACE INTO tourist_spots (area_name, description)
            VALUES (?, ?)
        ''', (area_name, description))
    
    conn.commit()  # 括弧を正しく閉じる
    conn.close()

def get_tourist_spot(area_name: str) -> Optional[str]:
    """指定された地域の観光情報を取得"""
    conn = sqlite3.connect('tourist_spots.db')
    c = conn.cursor()
    
    # 完全一致検索に変更
    c.execute('SELECT description FROM tourist_spots WHERE area_name = ?', (area_name,))
    result = c.fetchone()
    
    if not result:
        # 部分一致検索を試みる
        c.execute('SELECT description FROM tourist_spots WHERE area_name LIKE ?', (f'%{area_name}%',))
        result = c.fetchone()
    
    conn.close()
    return result[0] if result else None

def add_tourist_spot(area_name: str, description: str) -> bool:
    """新しい観光地情報を追加"""
    try:
        conn = sqlite3.connect('tourist_spots.db')
        c = conn.cursor()
        
        c.execute('''
            INSERT OR REPLACE INTO tourist_spots (area_name, description)
            VALUES (?, ?)
        ''', (area_name, description))
        
        conn.commit()
        conn.close()
        return True
    except Exception as e:
        print(f"Error adding tourist spot: {e}")
        return False

def get_all_tourist_spots() -> List[Dict[str, str]]:
    """全ての観光地情報を取得"""
    conn = sqlite3.connect('tourist_spots.db')
    c = conn.cursor()
    
    c.execute('SELECT area_name, description FROM tourist_spots')
    results = c.fetchall()
    
    conn.close()
    
    return [{"area_name": row[0], "description": row[1]} for row in results]

def check_db_contents():
    """データベースの内容を確認するデバッグ用関数"""
    try:
        conn = sqlite3.connect('tourist_spots.db')
        c = conn.cursor()
        c.execute('SELECT area_name, description FROM tourist_spots')
        results = c.fetchall()
        conn.close()
        return results
    except Exception as e:
        print(f"Database error: {e}")
        return []





